/**
 * Flashcard Modal Styles
 * Flip-card interface for trivia, factoids, and quotes
 */

/* Modal base */
.flashcard-modal {
    position: fixed !important;
    inset: 0;
    z-index: var(--z-modal, 1000) !important;
    display: none;
    pointer-events: none;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    width: 100% !important;
    height: 100% !important;
}

/* Disable electric green focus outlines in flashcard modal */
.flashcard-modal *:focus,
.flashcard-modal *:focus-visible {
    outline: none !important;
}

.flashcard-modal *::selection {
    background: rgba(255, 255, 255, 0.2) !important;
    color: inherit !important;
}

.flashcard-modal.active {
    display: block !important;
    pointer-events: auto;
}

.flashcard-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(4px);
    animation: fadeIn 0.3s ease;
}

.flashcard-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%; /* Responsive width */
    min-width: 280px; /* Mobile-friendly minimum */
    max-width: 385px; /* Match dashboard card width for consistency */
    height: auto; /* Shrink to content height */
    background: var(--bg-app);
    border-radius: var(--radius-lg);
    overflow: visible; /* Changed to visible for proper 3D transforms */
    animation: slideIn 0.3s ease;
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Start from top */
    padding: 5px; /* Minimal padding */
}

/* Header */
.flashcard-header {
    padding: 15px 30px;
    margin: 0 0 10px 0; /* Just 10px bottom margin */
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid var(--border);
}

.flashcard-close {
    position: absolute;
    top: -45px;
    right: 0;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: var(--text-primary);
    font-size: 20px;
    cursor: pointer;
    transition: all 0.2s;
    z-index: 10;
}

.flashcard-close:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
}

.flashcard-progress {
    flex: 1;
}

.progress-text {
    font-size: 14px;
    color: var(--text-secondary);
    margin-bottom: 8px;
    display: block;
}

.progress-bar {
    height: 6px;
    background: var(--bg-elevated);
    border-radius: 3px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background: var(--primary);
    transition: width 0.3s ease;
}

.flashcard-score {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 18px;
    font-weight: 600;
}

.score-icon {
    font-size: 24px;
}

/* Flashcard Container */
.flashcard-container {
    flex: 0 1 auto; /* Don't force flex growth - size to content */
    padding: 0 10px 20px 10px; /* Reduced left/right padding from 20px to 10px */
    display: flex;
    align-items: flex-start; /* Changed from center to flex-start */
    justify-content: center;
    /* Removed gradient for cleaner look */
    background: transparent;
    position: relative;
    min-height: auto; /* Let content determine height */
    overflow: visible;
}

.flashcard {
    width: 85%; /* 85% of container width */
    min-width: 280px; /* Mobile-friendly minimum */ 
    max-width: 385px; /* Match dashboard card width for consistency */
    height: auto; /* Let content determine height */
    position: relative;
    cursor: pointer;
    filter: drop-shadow(0 8px 24px rgba(0, 0, 0, 0.3));
    margin: 0 auto; /* Center horizontally, let header margin handle vertical spacing */
    transform-style: preserve-3d;
    transition: transform 0.6s;
    z-index: 1;
}

.flashcard.simple-flip {
    overflow: visible !important;
    height: auto; /* Let content determine height */
}

.flashcard.flipped {
    transform: rotateY(180deg);
}

/* Override for simple-flip - no 3D rotation needed */
.flashcard.simple-flip.flipped {
    transform: none !important;
}

/* Hide emojis during transition to prevent flash */
.flashcard.simple-flip .emoji {
    opacity: 0;
    transition: opacity 0.3s ease 0.3s;
}

.flashcard.simple-flip.flipped .emoji {
    opacity: 1;
}

.flashcard-front,
.flashcard-back {
    position: absolute; /* Keep absolute for flip animation */
    top: 0;
    left: 0;
    right: 0; /* Add right: 0 to contain width */
    width: 100%; /* Full width of parent */
    height: auto; /* Auto height to fit content */
    min-height: 300px; /* Reasonable minimum */
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding: 10px; /* Further reduced padding */
    text-align: center;
    box-shadow: inset 0 0 40px rgba(255, 255, 255, 0.05);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    overflow: visible; /* Changed to visible to allow growth */
    box-sizing: border-box; /* Include padding in width */
}

/* Allow proper layout for simple-flip backs */
.flashcard.simple-flip .flashcard-back {
    overflow-y: auto;
    overflow-x: hidden;
    justify-content: flex-start;
    padding: 20px 10px; /* More headroom and footroom */
    display: flex;
    flex-direction: column;
}

.flashcard-front {
    /* Flat color instead of gradient for consistency */
    background: var(--bg-elevated, #3A4F63);
    border: none; /* No border */
    position: relative; /* Changed from absolute to let it size naturally */
    overflow: visible; /* Allow content to grow */
    z-index: 2;
    backface-visibility: hidden;
    transform: rotateY(0deg);
    border-radius: 20px;
    padding: 20px;
    width: 100%;
    height: auto; /* Grow with content */
    display: flex;
    flex-direction: column;
}

.flashcard.flipped .flashcard-front {
    opacity: 0;
    visibility: hidden;
    z-index: 1;
}

.flashcard-front::before {
    content: none !important; /* COMPLETELY DISABLE - was blocking input interaction */
    display: none !important;
}

.flashcard-back {
    /* Flat color to match front */
    background: #2d4356;
    color: white;
    border: none; /* No border */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    min-height: 100%; /* Changed to min-height */
    height: auto; /* Allow growth */
    transform: rotateY(180deg);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start; /* Start from top, don't center */
    padding: 10px; /* Reduced padding to minimize nesting accumulation */
    text-align: center;
    box-sizing: border-box;
    overflow: visible; /* Allow growth */
}

/* Special handling for simple-flip backs */
.flashcard.simple-flip .flashcard-back {
    transform: none;
    backface-visibility: visible;
    opacity: 0;
    visibility: hidden;
    z-index: 1;
}

.flashcard.simple-flip.flipped .flashcard-back {
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 10;
}

/* Hide front when simple-flip is flipped */
.flashcard.simple-flip.flipped .flashcard-front {
    opacity: 0 !important;
    visibility: hidden !important;
    z-index: 1;
}

/* Ensure front is on top when not flipped */
.flashcard.simple-flip:not(.flipped) .flashcard-front {
    z-index: 10;
}

/* Simple flip state */
.flashcard.flipped .flashcard-back {
    z-index: 2;
}

/* Ensure simple-flip back is visible when flipped */
.flashcard.simple-flip.flipped .flashcard-back {
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 9999 !important;
    position: absolute !important;
    transform: rotateY(0deg) !important; /* Override the 180deg rotation */
    backface-visibility: visible !important;
}

/* Nuclear option - force ALL back content visible for simple-flip */
.flashcard.simple-flip.flipped .flashcard-back,
.flashcard.simple-flip.flipped .flashcard-back * {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
}

.flashcard.simple-flip.flipped .flashcard-back .simple-flip-container,
.flashcard.simple-flip.flipped .flashcard-back .factoid-back-display {
    display: flex !important;
}

/* Force factoid back content to stay visible when flipped */
.flashcard.flipped .simple-flip-container,
.flashcard.flipped .factoid-back-display,
.flashcard.flipped .factoid-twist,
.flashcard.flipped .wonder-meter-container {
    display: flex !important;
    opacity: 1 !important;
    visibility: visible !important;
    animation: none !important;
    transition: none !important;
    position: relative !important;
    z-index: 100 !important;
}

/* Ensure factoid backs are hidden when NOT flipped */
.flashcard.simple-flip:not(.flipped) .factoid-back-display,
.flashcard.simple-flip:not(.flipped) .factoid-detail-label,
.flashcard.simple-flip:not(.flipped) .category-hero-icon-back,
.flashcard.simple-flip:not(.flipped) .wonder-meter-container {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
}

/* Wonder Meter container on factoid backs - ultra compact */
#wonderMeterInline {
    position: relative; /* Changed from absolute to flow with content */
    width: 100%;
    height: 60px; /* Slightly taller for better visibility */
    display: flex;
    align-items: center;
    margin: 20px 0; /* Margin to separate from content */
    padding: 10px 20px; /* Some padding */
    background: rgba(30, 40, 50, 0.5); /* Semi-transparent background */
    border-radius: 20px;
}

/* Make Wonder Meter content ultra compact */
#wonderMeterInline .wonder-meter-content {
    padding: 0 !important;
    background: transparent !important;
    width: 100%;
}

/* Hide the label - we don't need it */
#wonderMeterInline .wonder-meter-label {
    display: none !important;
}

/* Make slider container flat */
#wonderMeterInline .wonder-meter-slider-container {
    padding: 0 !important;
    width: 100%;
    position: relative;
}

/* Ensure slider track is visible */
#wonderMeterInline .slider-track {
    background: rgba(255, 255, 255, 0.2) !important;
    height: 8px !important;
}

#wonderMeterInline .slider-fill {
    background: #58cc02 !important;
    height: 8px !important;
}

/* Make the slider thumb bigger */
#wonderMeterInline .wonder-slider::-webkit-slider-thumb {
    width: 20px !important;
    height: 20px !important;
    margin-top: -8px !important;
    transform: translateY(-2px) !important;
}

#wonderMeterInline .wonder-slider::-moz-range-thumb {
    width: 20px !important;
    height: 20px !important;
    border: none !important;
    transform: translateY(-2px) !important;
}

/* Simple flex layout for Wonder Meter */
#wonderMeterInline .wonder-meter-slider-container {
    display: flex !important;
    flex-direction: row !important;
    align-items: center !important;
    width: 100% !important;
    height: 40px !important;
    gap: 0 !important;
}

/* Hide the emoji track wrapper */
#wonderMeterInline .emoji-track {
    display: none !important;
}

/* Add emojis directly as pseudo elements */
#wonderMeterInline .slider-container {
    flex: 1 !important;
    position: relative !important;
    margin: 0 30px !important;
}

/* Move the actual slider up */
#wonderMeterInline .wonder-slider {
    position: relative !important;
    top: -2px !important;
}

#wonderMeterInline .slider-container::before {
    content: "" !important;
    position: absolute !important;
    left: -35px !important;
    top: 50% !important;
    transform: translateY(-50%) !important;
    width: 32px !important;
    height: 32px !important;
    background-image: url('../../images/navIcons/thinkingEmoji.svg') !important;
    background-repeat: no-repeat !important;
    background-position: center !important;
    background-size: contain !important;
    filter: none !important; /* No filters on white SVGs */
    opacity: 1 !important;
    z-index: 10 !important;
}

#wonderMeterInline .slider-container::after {
    content: "" !important;
    position: absolute !important;
    right: -40px !important;
    top: 50% !important;
    transform: translateY(-50%) !important;
    width: 32px !important;
    height: 32px !important;
    background-image: url('../../images/navIcons/sunglassesEmogi.svg') !important;
    background-repeat: no-repeat !important;
    background-position: center !important;
    background-size: contain !important;
    filter: none !important; /* No filters on white SVGs */
    opacity: 1 !important;
    z-index: 10 !important;
}

#wonderMeterInline .emoji-marker .emoji {
    font-size: 24px !important;
}

/* Hide emoji labels */
#wonderMeterInline .emoji-label {
    display: none !important;
}

/* Hide current rating display */
#wonderMeterInline .current-rating {
    display: none !important;
}

/* Hide the continue button - we use flip icon instead */
#wonderMeterInline .wonder-meter-continue {
    display: none !important;
}

/* Ensure Wonder Meter is visible on flipped factoids */
.flashcard.simple-flip.flipped #wonderMeterInline {
    display: flex !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Hide challenge container completely for simple-flip cards */
.flashcard.simple-flip .flashcard-challenge-container,
.flashcard.simple-flip .flashcard-answer-feedback,
.flashcard.simple-flip .flashcard-continue-btn,
.flashcard.simple-flip .flashcard-check-answer-btn {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
}

/* Make sure the challenge input shows for simple-flip */
.flashcard.flipped .challenge-input {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    position: relative !important;
    z-index: 50 !important;
}

.flashcard-back::before {
    content: none !important; /* COMPLETELY DISABLE - was blocking input interaction */
    display: none !important;
}

@keyframes shimmer {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

.card-category {
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--primary);
    margin: 2px 0; /* Tiny margins */
    padding: 2px 10px; /* Minimal padding */
    background: rgba(88, 204, 2, 0.1);
    border-radius: 20px;
    position: relative;
    z-index: 2;
}

/* Remove bubble for quote cards */
.quote-card .card-category {
    background: none;
    border-radius: 0;
    padding: 0;
}

/* Bigger category tag for quotes - Gen Z vibes */
.quote-category {
    font-family: 'Kablammo', cursive; /* Explosive, dynamic Gen Z font */
    font-size: 48px; /* Super sized */
    padding: 0; /* No bubble */
    margin: 15px 0 20px 0; /* Good spacing */
    font-weight: 400; /* Let the font do the work */
    color: #FFFFFF; /* Pure white */
    text-transform: uppercase;
    letter-spacing: 2px;
    text-shadow: none; /* No shadow - just clean white */
    transform: none; /* No rotation - straight up */
    background: none; /* Remove bubble background */
    display: flex;
    justify-content: center;
    gap: 15px;
}

/* Individual animated words for SAY WHAT! */
.say-word {
    display: inline-block;
    animation: sayWhatIntro 2.5s ease-out forwards;
    transform-origin: center;
}

.say-word-1 {
    animation-delay: 0s;
}

.say-word-2 {
    animation-delay: 0.1s;
}

/* Initial giant entrance animation that settles down */
@keyframes sayWhatIntro {
    0% {
        transform: scale(2.5) rotate(-15deg);
        opacity: 0;
    }
    10% {
        transform: scale(2.2) rotate(10deg);
        opacity: 1;
    }
    20% {
        transform: scale(1.8) rotate(-5deg);
    }
    30% {
        transform: scale(1.4) rotate(3deg);
    }
    40% {
        transform: scale(1.2) rotate(-2deg);
    }
    50% {
        transform: scale(1) rotate(0deg);
    }
    /* After settling, add subtle continuous animation */
    100% {
        transform: scale(1) rotate(0deg);
    }
}

/* After intro animation completes, apply subtle continuous throb */
.say-word {
    animation: sayWhatIntro 2.5s ease-out forwards,
               sayWhatThrob 2s ease-in-out 2.5s infinite;
}

/* Subtle continuous throb animation */
@keyframes sayWhatThrob {
    0%, 100% {
        transform: scale(1) rotate(0deg);
    }
    25% {
        transform: scale(1.1) rotate(-2deg);
    }
    50% {
        transform: scale(1.05) rotate(1deg);
    }
    75% {
        transform: scale(1.08) rotate(-1deg);
    }
}

/* Quote card front specific padding (not margin since it's absolutely positioned) */
.flashcard-front.quote-card {
    padding: 15px 20px; /* Much less padding inside the card */
}

/* Add some top spacing specifically for the quote category */
.quote-card .quote-category:first-child {
    margin-top: 15px; /* Extra breathing room at top */
}

/* Reset unwanted spacing from nested elements */
.flashcard-modal * {
    box-sizing: border-box;
}

/* More specific reset - don't reset header and container margins */
.flashcard-modal p,
.flashcard-modal span {
    margin: 0;
    padding: 0;
}

/* Reset only specific divs, not all divs */
.flashcard-content > div:not(.flashcard-header):not(.flashcard-container) {
    margin: 0;
    padding: 0;
}

/* Quote card specific styles */
.quote-card .card-challenge {
    display: flex !important;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 40px 20px;
    height: 100%;
}

.quote-card .challenge-question {
    color: white !important;
    font-size: 24px !important;
    margin-bottom: 30px !important;
}

.quote-card .challenge-input {
    width: 100%;
    max-width: 400px;
}

.quote-card .flashcard-back {
    display: flex !important;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 30px;
    background: var(--bg-elevated, #3A4F63) !important; /* Ensure visible background */
    color: white !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Force quote challenge content visible */
.quote-card.flipped .flashcard-back,
.quote-card.flipped .flashcard-challenge-container,
.quote-card.flipped .flashcard-challenge-question,
.quote-card.flipped .flashcard-challenge-input,
.quote-card.flipped .flashcard-check-answer-btn,
.quote-card.flipped .card-challenge {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 10 !important;
}

/* Ensure the card-challenge div inside flashcard-back is visible */
.quote-card .flashcard-back .card-challenge {
    display: flex !important;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 300px;
    width: 100%;
    opacity: 1 !important;
    visibility: visible !important;
    position: relative !important;
    z-index: 20 !important;
    color: white !important;
    padding: 20px;
}

/* Make sure all challenge elements are visible on quote cards */
.quote-card .flashcard-back .flashcard-challenge-container,
.quote-card .flashcard-back .challenge-question,
.quote-card .flashcard-back .challenge-input,
.quote-card .flashcard-back .flashcard-check-answer-btn,
.quote-card.flipped .flashcard-back .flashcard-challenge-container,
.quote-card.flipped .flashcard-back .challenge-question,
.quote-card.flipped .flashcard-back .challenge-input,
.quote-card.flipped .flashcard-back .flashcard-check-answer-btn {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    position: relative !important;
    z-index: 100 !important;
}

/* Debug: Force all challenge containers to be visible for quotes */
.quote-card.flipped .card-challenge,
.quote-card.flipped .card-challenge * {
    opacity: 1 !important;
    visibility: visible !important;
}

/* Ensure proper flip animation for all cards */
.flashcard.flipped {
    transform: rotateY(180deg);
}

/* When flipped, hide front and show back */
.flashcard.flipped .flashcard-front {
    backface-visibility: hidden;
    transform: rotateY(0deg);
}

.flashcard.flipped .flashcard-back {
    backface-visibility: visible;
    transform: rotateY(0deg);
}

.quote-card .flashcard-front {
    position: relative !important; /* Let it size to content */
    width: 100% !important;
    height: auto !important; /* Grow with content */
    backface-visibility: hidden !important;
    border-radius: var(--radius-lg);
}

.quote-card .flashcard-back {
    position: absolute !important;
    width: 100% !important;
    height: 100% !important;
    top: 0 !important;
    left: 0 !important;
    backface-visibility: hidden !important;
    border-radius: var(--radius-lg);
    /* REMOVED transform: rotateY(180deg) - quote cards use fade, not 3D flip */
    background: var(--bg-elevated, #3A4F63) !important;
    padding: 30px !important;
    display: flex !important;
    flex-direction: column !important;
    align-items: center !important;
    justify-content: center !important;
}

/* Remove this duplicate - handled below */

/* REMOVED - This was causing the mirror effect! */

/* Quote cards use fade transition instead of 3D flip to avoid mirroring issues */
.quote-card .flashcard {
    transform-style: flat !important;
    -webkit-transform-style: flat !important;
}

/* Quote card backs start hidden */
.quote-card .flashcard-back {
    transform: none !important;
    -webkit-transform: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
    z-index: 1 !important;
    transition: opacity 0.3s ease, visibility 0.3s ease !important;
}

/* Quote card fronts start visible */
.quote-card .flashcard-front {
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 2 !important;
    transition: opacity 0.3s ease, visibility 0.3s ease !important;
}

/* Override the general .flashcard.flipped rule for quote cards - no rotation */
.flashcard.quote-card.flipped {
    transform: none !important;
    -webkit-transform: none !important;
}

/* When flipped, swap visibility */
.quote-card.flipped .flashcard-front {
    opacity: 0 !important;
    visibility: hidden !important;
    z-index: 1 !important;
}

.quote-card.flipped .flashcard-back {
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 2 !important;
    display: flex !important;
    background: var(--bg-elevated, #3A4F63) !important;
}

/* COMMENTED OUT DUPLICATE RULES TO PREVENT CONFLICTS
/* When quote card is flipped, show the back (no rotation needed since back starts at 0deg) */
/* .quote-card.flipped .flashcard-back { */
    /* Just show it - no transform needed */
    /* transform: none !important; */
    /* -webkit-transform: none !important; */
    /* opacity: 1 !important; */
    /* visibility: visible !important; */
    /* display: flex !important; */
    /* z-index: 100 !important; */
    /* background: var(--bg-elevated, #3A4F63) !important; */
/* } */

/* Remove any additional transforms on the back when flipped */
/* .quote-card.flipped .flashcard-back { */
    /* No additional transform needed - the container rotation handles it */
    /* z-index: 10 !important; */
    /* opacity: 1 !important; */
    /* visibility: visible !important; */
    /* display: flex !important; */
    /* background: var(--bg-elevated, #3A4F63) !important; */
/* } */

/* Specific rule to counter any hiding */
/* .flashcard.quote-card.flipped .flashcard-back { */
    /* display: flex !important; */
    /* opacity: 1 !important; */
    /* visibility: visible !important; */
/* } */

/* Force the challenge container to be visible on quote cards */
.quote-card .flashcard-back .card-challenge {
    display: flex !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* DUPLICATE - COMMENTED OUT
.quote-card.flipped .flashcard-front {
    opacity: 0 !important;
    visibility: hidden !important;
    z-index: 1 !important;
}
*/

/* Ensure the back face is properly positioned */
/* .quote-card .flashcard-back { */
    /* background: var(--bg-elevated, #3A4F63) !important; */
    /* color: white !important; */
/* } */

/* NUCLEAR OPTION: Force all quote card back content visible */
.quote-card.flipped .flashcard-back,
.quote-card.flipped .flashcard-back *,
.quote-card.flipped .flashcard-back .card-challenge,
.quote-card.flipped .flashcard-back .flashcard-challenge-container,
.quote-card.flipped .flashcard-back .challenge-question,
.quote-card.flipped .flashcard-back .challenge-input,
.quote-card.flipped .flashcard-back .check-answer-btn,
.quote-card.flipped .flashcard-back .flashcard-check-answer-btn {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
}

/* Ensure flexbox elements use flex display */
.quote-card.flipped .flashcard-back,
.quote-card.flipped .flashcard-back .card-challenge,
.quote-card.flipped .flashcard-back .flashcard-challenge-container {
    display: flex !important;
}

/* Ensure quote card back challenge is properly styled */
.quote-card .flashcard-challenge-container,
.quote-card.flipped .flashcard-challenge-container {
    width: 100%;
    max-width: 500px;
    margin: 0 auto;
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}


/* Prevent quote cards from having their challenge hidden */
.quote-card .flashcard-back .card-challenge,
.quote-card.flipped .flashcard-back .card-challenge {
    display: flex !important;
    opacity: 1 !important;
    visibility: visible !important;
}

.quote-card .flashcard-challenge-question {
    color: white !important;
    font-size: 24px !important;
    margin-bottom: 15px !important; /* Reduced from 30px to 15px */
    text-align: left;
    min-height: 40px !important;
    display: block !important;
}

/* Ensure quote challenges are visible */
/* .quote-card .flashcard-check-answer-btn {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    margin: 30px auto 20px auto !important;
    max-width: 200px;
} */
/* Button visibility now controlled by JavaScript updateButtonVisibility() */

/* Hide continue button on quote cards - they use check answer button */
/* .quote-card .flashcard-continue-btn {
    display: none !important;
} */
/* Button visibility now controlled by JavaScript updateButtonVisibility() */

/* Space out multiple choice options */
.quote-card .multiple-choice-options {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin: 20px 0;
}

.quote-card .mc-option {
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
}

.category-icon {
    width: 24px;
    height: 24px;
    object-fit: contain;
    filter: brightness(0) saturate(100%) invert(82%) sepia(21%) saturate(3018%) hue-rotate(43deg) brightness(106%) contrast(101%);
}

/* Factoid hero display */
.factoid-hero-display {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5px; /* Minimal gap */
    width: 100%;
    position: relative;
    margin: 0;
    padding: 0; /* No padding - items handle their own */
    /* Removed height: 100% to allow flex growth */
}

/* Force category to top of factoid cards */
.simple-flip .factoid-hero-display .card-category {
    position: relative;
    margin: 0 0 5px 0; /* Just tiny bottom margin */
}

.category-hero-icon {
    width: 320px;
    height: 320px;
    object-fit: contain;
    margin: 0;
    flex-shrink: 0; /* Don't let it shrink */
}

.factoid-text {
    font-size: 18px;
    line-height: 1.3;
    text-align: left; /* Already left aligned */
    flex: 1; /* Take remaining space */
    overflow-y: auto; /* Allow scroll if needed */
    padding: 5px 15px 70px; /* Bottom padding for flip button space */
    margin: 0; /* No margins */
    color: var(--text-primary);
    width: 100%;
}

/* Sign bot decoration - removed for cleaner design */
/* Ghost bots were distracting from content */

/* Simple flip container for factoids */
.simple-flip-container {
    padding: 30px;
    text-align: center;
    cursor: pointer;
    transition: all 0.2s ease;
}

.simple-flip-container:hover {
    transform: scale(1.02);
}

.factoid-twist {
    font-size: 20px;
    line-height: 1.6;
    color: var(--text-primary);
    margin: 20px 0;
    padding: 0;
    background: transparent;
    border-radius: 0;
    border: none;
    width: 100%;
    max-height: none;
    overflow-y: visible;
    text-align: left;
}

/* Custom scrollbar for factoid twist */
.factoid-twist::-webkit-scrollbar {
    width: 6px;
}

.factoid-twist::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 3px;
}

.factoid-twist::-webkit-scrollbar-thumb {
    background: rgba(88, 204, 2, 0.5);
    border-radius: 3px;
}

.factoid-twist::-webkit-scrollbar-thumb:hover {
    background: rgba(88, 204, 2, 0.7);
}

.factoid-hint {
    font-size: 14px;
    color: var(--text-secondary);
    opacity: 0.7;
    font-style: italic;
}

.card-question {
    font-size: 20px;
    font-weight: 600;
    line-height: 1.4;
    color: var(--text-primary);
    margin-bottom: auto;
}

.flip-hint {
    font-size: 14px;
    color: var(--text-secondary);
    opacity: 0.7;
    margin-top: auto;
}

.card-content {
    font-size: 20px;
    line-height: 1.5;
    color: var(--text-primary);
    margin: 0; /* Remove margin */
}

.quote-display {
    display: flex;
    flex-direction: column;
    align-items: flex-start; /* Left align content */
    justify-content: flex-start; /* Start from top instead of center */
    padding: 0; /* Remove padding - let elements handle their own spacing */
    height: auto; /* Don't force height */
    width: 100%;
}

/* Reduce padding specifically for quote cards */
.quote-card .flashcard-front {
    padding: 5px; /* Minimal padding for quote cards */
}

/* Hide the original flip button for quote cards */
.quote-card .flip-icon-button:not(.quote-flip-button) {
    display: none !important;
}

/* Quote flip footer - dedicated space for flip button */
.quote-flip-footer {
    display: flex;
    justify-content: flex-end; /* Right-align the button */
    align-items: center;
    width: 100%; /* Full width to enable right alignment */
    padding: 15px 0;
    margin-top: 10px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.quote-flip-footer .quote-flip-button {
    position: relative; /* Normal flow instead of absolute */
    bottom: auto;
    right: auto;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    width: 56px;
    height: 56px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    opacity: 0.9;
}

.quote-flip-footer .quote-flip-button:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.5);
    transform: scale(1.1);
    opacity: 1;
}

.quote-flip-footer .flip-icon {
    width: 24px;
    height: 24px;
    filter: brightness(0) invert(1); /* Make icon white */
}

/* Fix quote card back containment when flipped - HIGHEST SPECIFICITY */
.flashcard.quote-card.flipped {
    height: auto !important;
    min-height: auto !important;
}

.flashcard.quote-card.flipped .flashcard-back {
    position: relative !important; /* Use normal flow instead of absolute */
    top: auto !important;
    left: auto !important;
    transform: none !important; /* No 3D transform */
    min-height: auto !important;
    height: auto !important;
    width: 100% !important;
    display: flex !important;
    flex-direction: column !important;
    justify-content: flex-start !important;
    align-items: center !important;
    padding: 20px !important;
    box-sizing: border-box !important;
    overflow: visible !important;
}

/* Hide front when quote card is flipped */
.flashcard.quote-card.flipped .flashcard-front {
    display: none !important;
}

.quote-bot-image {
    width: 260px;
    height: 260px;
    object-fit: contain;
    margin: 0; /* No margin around image */
    opacity: 0.9;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
}

.quote-display .quote-text {
    font-size: 22px;
    font-style: italic;
    margin: 0 0 10px 0; /* Reduced bottom margin */
    line-height: 1.4;
    text-align: left; /* Left justify the quote */
    width: 100%; /* Full width */
}

.quote-display .quote-author {
    font-size: 16px;
    opacity: 0.8;
    font-style: normal;
    margin: 0; /* No margin */
    text-align: left; /* Left justify author too */
    width: 100%; /* Full width */
}

.content-display {
    font-size: 20px;
    line-height: 1.5;
}

/* Challenge styles - MUST REMAIN VISIBLE */
.card-challenge {
    width: 100%;
    text-align: center;
    position: relative;
    z-index: 10;
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Special styling for simple-flip challenges */
.flashcard.simple-flip .card-challenge,
.flashcard[data-challenge-type="simple-flip"] .card-challenge {
    display: flex !important;
    flex-direction: column;
    height: 100%;
    width: 100%;
    justify-content: flex-start;
    align-items: center;
    padding: 20px;
}

/* Hide the challenge question for factoids */
.flashcard.simple-flip .challenge-question {
    display: none !important;
}

/* Make challenge input full height for factoids */
.flashcard.simple-flip .challenge-input {
    flex: 1;
    display: flex !important;
    width: 100%;
}

/* Ensure challenge stays visible when card is flipped */
.flashcard.flipped .card-challenge {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}

.challenge-question {
    font-size: 20px !important;
    font-weight: 600;
    margin-bottom: 24px;
    color: white !important;
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5) !important;
}

.challenge-input {
    margin-bottom: 24px;
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Force challenge content to stay visible */
.flashcard.flipped .challenge-input,
.flashcard.flipped .challenge-question,
.flashcard.flipped .flashcard-challenge-container,
.flashcard.flipped .flashcard-check-answer-btn {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Check Answer Button specific styles */
.flashcard-check-answer-btn,
.check-answer-btn {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    position: relative !important;
    z-index: 101 !important;
    margin: 40px auto !important; /* More top margin to move it up */
    margin-right: 30px !important; /* Add right buffer to shift left */
    padding: 12px 24px !important;
    background: var(--primary) !important;
    color: var(--bg-dark) !important;
    border: none !important;
    border-radius: 24px !important;
    font-weight: 600 !important;
    cursor: pointer !important;
}

/* Ensure it stays visible when card is flipped */
.flashcard.flipped .flashcard-check-answer-btn,
.flashcard-back .flashcard-check-answer-btn {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Input styles - FORCE VISIBILITY */
.fill-blank-input,
.author-input {
    width: 100%;
    max-width: 300px;
    padding: 12px 20px;
    font-size: 18px;
    border: 2px solid rgba(255, 255, 255, 0.5) !important;
    border-radius: 12px;
    background: rgba(0, 0, 0, 0.3) !important;
    color: white !important;
    text-align: center;
    transition: all 0.2s;
    display: block !important;
    margin: 0 auto;
    opacity: 1 !important;
    visibility: visible !important;
    position: relative !important;
    z-index: 100 !important;
}

/* Extra specific rules to prevent hiding */
.flashcard.flipped .fill-blank-input,
.flashcard.flipped .author-input,
.flashcard-back .fill-blank-input,
.flashcard-back .author-input,
#fillBlankInput,
#authorInput {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    position: relative !important;
    z-index: 100 !important;
}

.fill-blank-input:focus,
.author-input:focus {
    outline: none;
    border-color: rgba(255, 255, 255, 0.6);
    background: rgba(255, 255, 255, 0.15);
}

/* Multiple choice */
.multiple-choice-options {
    display: grid;
    gap: 12px;
    max-width: 400px;
    margin: 0 auto;
}

/* Mobile adjustments for flashcard sizing */
@media (max-width: 600px) {
    .flashcard-content {
        width: 95vw; /* Use viewport width */
        min-width: 280px; /* Smaller mobile minimum */
        max-width: 95vw; /* Don't exceed viewport */
    }
    
    .flashcard {
        width: 95%; /* More of screen width on mobile */
        min-width: 280px; /* Mobile-friendly minimum */
        max-width: 100%; /* Don't exceed parent */
        margin: 0 auto;
        height: auto !important; /* NEVER EVER EVER USE FIXED HEIGHT - breaks flexbox containment */
        min-height: auto !important; /* Remove any fixed minimums */
    }
    
    .multiple-choice-options {
        max-width: 100%; /* Use full card width on mobile */
        padding: 0 10px; /* Small padding */
    }
    
    .results-screen {
        padding: 10px; /* Further reduced padding on mobile */
        width: 100%;
        max-width: 100%;
        min-width: auto; /* Remove any minimum width constraints */
    }
    
    .rewards-container-large {
        width: 95%; /* Use percentage instead of fixed 400px */
        max-width: 95%; /* Ensure it fits within mobile viewport */
        margin: 0 auto; /* Center it */
    }
}

.mc-option {
    padding: 14px 20px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    text-align: left;
}

.mc-option:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateX(4px);
}

.mc-option.selected {
    background: rgba(255, 255, 255, 0.3);
    border-color: white;
}

/* True/False */
.true-false-options {
    display: flex;
    gap: 20px;
    justify-content: center;
}

.tf-option {
    padding: 20px 40px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 16px;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 18px;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 12px;
}

.tf-option:hover {
    transform: scale(1.05);
}

.tf-option[data-answer="True"]:hover {
    background: rgba(46, 204, 64, 0.3);
    border-color: #2ecc40;
}

.tf-option[data-answer="False"]:hover {
    background: rgba(255, 75, 75, 0.3);
    border-color: #ff4b4b;
}

.tf-option.selected[data-answer="True"] {
    background: rgba(46, 204, 64, 0.4);
    border-color: #2ecc40;
}

.tf-option.selected[data-answer="False"] {
    background: rgba(255, 75, 75, 0.4);
    border-color: #ff4b4b;
}

.tf-icon {
    font-size: 24px;
}

/* Word order challenge */
.word-order-container {
    max-width: 500px;
    margin: 0 auto;
    padding: 10px 0;
}

/* Specific styles for quote word-order challenges */
.quote-card .word-order-container .flashcard-challenge-question {
    font-size: 14px !important;
    font-weight: normal !important;
    margin-bottom: 10px !important;
}

.word-bank {
    display: grid !important;
    grid-template-columns: repeat(3, 1fr) !important;
    gap: 10px;
    justify-items: center;
    align-items: center;
    margin-bottom: 15px;
    padding: 12px;
    border: 2px dashed rgba(255, 255, 255, 0.3);
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.05);
}

/* Ensure word chips work well in grid */
.word-bank .word-chip {
    width: 100%;
    max-width: 120px;
    text-align: center;
}

.word-chip {
    padding: 6px 12px;
    background: rgba(255, 255, 255, 0.2);
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 16px;
    color: white;
    font-weight: 500;
    font-size: 14px;
    cursor: pointer;
    transition: all 0.3s ease;
    user-select: none;
    white-space: nowrap;
}

.word-chip:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
}

.word-chip.selected {
    opacity: 0.5;
    cursor: not-allowed;
}

.word-answer {
    min-height: 60px;
    padding: 12px 16px;
    border: 2px solid rgba(255, 255, 255, 0.5);
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.1);
    font-size: 16px;
    line-height: 1.5;
    color: white;
    text-align: center;
    cursor: pointer;
    transition: background 0.2s;
}

.word-answer:hover {
    background: rgba(255, 255, 255, 0.15);
}

.answer-placeholder {
    color: rgba(255, 255, 255, 0.5);
    font-style: italic;
}

/* Remove bubble styling for words in answer area */
.word-answer .word-chip {
    display: inline;
    background: none;
    border: none;
    padding: 0;
    margin: 0 4px;
    font-size: inherit;
    font-weight: normal;
}

/* Answer check container */
.answer-check {
    position: relative;
    margin-top: 20px;
    text-align: center;
    z-index: 1000;
}

/* Ensure answer-check is visible on quote cards */
.quote-card .answer-check {
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
}

/* Check answer button */
.check-answer-btn {
    padding: 14px 32px;
    background: linear-gradient(135deg, #58cc02, #4fa802);
    color: white;
    border: none;
    border-radius: 24px;
    font-size: 16px;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.2s;
    box-shadow: 0 4px 12px rgba(88, 204, 2, 0.3);
}

.check-answer-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(88, 204, 2, 0.4);
    background: linear-gradient(135deg, #6dd30f, #58cc02);
}

/* Answer overlay - bot feedback */
.answer-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 20px;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 100;
}

.answer-overlay.show {
    opacity: 1;
}

.answer-overlay .feedback-bot {
    width: 120px;
    height: 120px;
    margin-bottom: 20px;
    animation: botBounce 0.5s ease;
}

.answer-overlay .feedback-message {
    text-align: center;
    color: white;
}

.answer-overlay .feedback-message h3 {
    font-size: 28px;
    margin-bottom: 10px;
}

.answer-overlay .feedback-message p {
    font-size: 18px;
    opacity: 0.9;
}

.answer-overlay.correct {
    background: rgba(88, 204, 2, 0.9);
}

.answer-overlay.incorrect {
    background: rgba(255, 75, 75, 0.9);
}

@keyframes botBounce {
    0% { transform: scale(0.8); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

@keyframes heartBreak {
    0% { transform: scale(0.8) rotate(0deg); }
    25% { transform: scale(1.2) rotate(-5deg); }
    50% { transform: scale(1.1) rotate(5deg); }
    75% { transform: scale(1.3) rotate(-3deg); }
    100% { transform: scale(1) rotate(0deg); }
}

@keyframes bonusPopIn {
    0% { 
        transform: translate(-50%, -50%) scale(0.5); 
        opacity: 0; 
    }
    100% { 
        transform: translate(-50%, -50%) scale(1); 
        opacity: 1; 
    }
}

@keyframes bonusPopOut {
    0% { 
        transform: translate(-50%, -50%) scale(1); 
        opacity: 1; 
    }
    100% { 
        transform: translate(-50%, -50%) scale(0.8); 
        opacity: 0; 
    }
}

/* Answer feedback */
.answer-feedback {
    text-align: center;
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 101;
}

.feedback-content {
    font-size: 20px;
    font-weight: 700;
    margin-bottom: 20px;
    color: white;
}

.feedback-content.correct {
    color: #2ecc40;
}

.feedback-content.incorrect {
    color: #ff4b4b;
}

.continue-btn {
    padding: 12px 28px;
    background: var(--primary);
    border: none;
    border-radius: 20px;
    color: white;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    position: relative;
    z-index: 102;
}

.continue-btn:hover {
    background: #6dd30f;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(88, 204, 2, 0.3);
}

/* Answer Actions */
.answer-actions {
    display: flex;
    gap: 16px;
    width: 100%;
}

.answer-btn {
    flex: 1;
    padding: 12px 20px;
    border-radius: 12px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
}

.answer-btn:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-2px);
}

.incorrect-btn:hover {
    border-color: #ff4b4b;
    background: rgba(255, 75, 75, 0.2);
}

.correct-btn:hover {
    border-color: #2ecc40;
    background: rgba(46, 204, 64, 0.2);
}

.btn-icon {
    font-size: 24px;
}

/* Footer */
.flashcard-footer {
    padding: 20px;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    position: relative;
}

.skip-btn {
    position: absolute;
    bottom: 100%;
    right: 50%;
    transform: translateX(50%);
    margin-bottom: 5px;
    padding: 10px 24px;
    background: var(--bg-elevated);
    border: 1px solid var(--border);
    border-radius: 20px;
    color: var(--text-secondary);
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
}

.skip-btn:hover {
    background: var(--bg-elevated-hover);
    color: var(--text-primary);
    transform: translateY(-2px);
}

.streak-indicator {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    background: rgba(255, 107, 107, 0.1);
    border-radius: 20px;
    color: #ff6b6b;
    font-weight: 600;
}

.streak-icon {
    font-size: 20px;
}

/* Score Message Bar */
.score-message-bar {
    position: absolute;
    bottom: -60px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--bg-dark);
    padding: 12px 24px;
    border-radius: 24px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
    opacity: 0;
    transition: all 0.3s ease;
    z-index: 103;
    min-width: 300px;
}

.score-message-bar.show {
    bottom: 20px;
    opacity: 1;
}

.score-message-bar.correct {
    background: linear-gradient(135deg, #2d4a3d, #1f3429);
    border: 1px solid rgba(88, 204, 2, 0.3);
}

.score-message-bar.incorrect {
    background: linear-gradient(135deg, #4a2d2d, #342929);
    border: 1px solid rgba(255, 75, 75, 0.3);
}

.score-message-content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 16px;
    color: white;
}

.score-label {
    font-weight: 600;
    opacity: 0.8;
}

.score-item {
    font-weight: 700;
    font-size: 16px;
}

.score-item.streak {
    color: #ffd700;
}

/* Reward Popup */
.reward-popup {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: var(--bg-dark);
    padding: 20px 40px;
    border-radius: 16px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
    z-index: 100;
    animation: popupIn 0.4s ease;
    display: none;
}

.reward-popup.correct {
    background: linear-gradient(135deg, #2ecc40, #27ae60);
    color: white;
}

.reward-popup.incorrect {
    background: linear-gradient(135deg, #ff4b4b, #e74c3c);
    color: white;
}

.reward-content {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 20px;
    font-weight: 700;
}

.reward-icon {
    font-size: 32px;
}

@keyframes popupIn {
    from {
        transform: translate(-50%, -50%) scale(0.5);
        opacity: 0;
    }
    to {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
}

/* Results Screen */
.results-screen {
    text-align: center;
    padding: 3px;
}

.results-screen h2 {
    font-size: 28px;
    margin-bottom: 30px;
    color: var(--text-primary);
}

.results-stats {
    display: flex;
    justify-content: center;
    gap: 40px;
    margin-bottom: 30px;
}

.result-stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
}

.stat-value {
    font-size: 36px;
    font-weight: 700;
    color: var(--primary);
}

.stat-label {
    font-size: 14px;
    color: var(--text-secondary);
    text-transform: uppercase;
    letter-spacing: 1px;
}

.results-message {
    font-size: 18px;
    color: var(--text-primary);
    margin-bottom: 40px;
    line-height: 1.4;
}

.results-actions {
    display: flex;
    gap: 16px;
    justify-content: center;
}

.btn-primary,
.btn-secondary {
    padding: 12px 32px;
    border-radius: 24px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    border: none;
}

.btn-primary {
    background: var(--primary);
    color: var(--bg-dark);
}

.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 16px rgba(88, 204, 2, 0.3);
}

.btn-secondary {
    background: var(--bg-elevated);
    color: var(--text-primary);
}

.btn-secondary:hover {
    background: var(--bg-elevated-hover);
}

/* Mobile adjustments */
@media (max-width: 600px) {
    .flashcard-content {
        width: 95%;
    }
    
    .flashcard {
        height: auto; /* Remove fixed height - let content determine height */
        min-height: auto; /* Remove fixed minimum too */
    }
    
    .card-question {
        font-size: 18px;
    }
    
    .card-answer {
        font-size: 20px;
    }
    
    .answer-btn {
        padding: 10px 16px;
        font-size: 14px;
    }
    
    .btn-icon {
        font-size: 20px;
    }
}

/* JazzyPop Style Feedback */
.xp-reward-popup {
    position: fixed;
    top: 120px;
    left: 50%;
    transform: translateX(-50%);
    background: rgba(76, 175, 80, 0.95);
    color: white;
    padding: 10px 20px;
    border-radius: 25px;
    font-weight: 700;
    font-size: 16px;
    display: flex;
    align-items: center;
    gap: 8px;
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
    opacity: 0;
    transform: translateX(-50%) translateY(-20px);
    transition: all 0.4s ease;
    z-index: 1001;
}

.xp-reward-popup.show {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
}

.xp-reward-popup .reward-icon {
    font-size: 18px;
}

.bot-feedback-indicator {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    transform: scale(0.8);
    transition: all 0.3s ease;
    z-index: 1000;
    pointer-events: none;
}

.bot-feedback-indicator.show {
    opacity: 1;
    transform: scale(1);
}

.bot-feedback-indicator .bot-icon {
    width: 300px;
    height: 300px;
    position: relative;
    animation: botJiggle 0.6s ease-out;
}

.checkmark-badge,
.x-badge {
    position: absolute;
    bottom: 20px;
    right: 20px;
    width: 80px;
    height: 80px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 48px;
    font-weight: bold;
    color: white;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.checkmark-badge {
    background: #4caf50;
}

.x-badge {
    background: #f44336;
}

/* Animations */
@keyframes botJiggle {
    0%, 100% { 
        transform: scale(1) rotate(0deg); 
    }
    15% { 
        transform: scale(1.1) rotate(-3deg); 
    }
    30% { 
        transform: scale(1.05) rotate(2deg); 
    }
    45% { 
        transform: scale(1.08) rotate(-1deg); 
    }
    60% { 
        transform: scale(1.02) rotate(1deg); 
    }
    75% { 
        transform: scale(1.04) rotate(-0.5deg); 
    }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translate(-50%, -45%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}
/* Simple Flip (Factoid) Styles */
.simple-flip-container {
    display: flex !important;
    flex-direction: column;
    gap: 20px;
    min-height: 300px;
    padding: 10px;
    width: 100%;
    height: 100%;
    position: relative;
    justify-content: flex-start;
    align-items: center;
}

.factoid-twist {
    font-size: 18px;
    line-height: 1.6;
    color: var(--text-primary);
    text-align: center;
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px 10px;
    width: 100%;
    max-height: 60%;
    overflow-y: auto;
}

/* Make factoid front text bigger */
.flashcard-front .flashcard-content {
    font-size: 28px \!important;
    line-height: 1.4;
    font-weight: 500;
}

/* Make flashcard expand to content */
.flashcard-card {
    min-height: 400px;
    height: auto \!important;
    max-height: 80vh;
    overflow-y: auto;
}

/* Flip icon button */
.flip-icon-button {
    position: absolute;
    bottom: 20px; /* More space from bottom */
    right: 20px;
    width: 60px; /* Bigger button */
    height: 60px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    padding: 12px;
    z-index: 100;
}

.flip-icon-button:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
}

.flip-icon {
    width: 100%;
    height: 100%;
    filter: brightness(0) invert(1); /* Make it white */
    opacity: 0.8;
}

.flip-icon-button:hover .flip-icon {
    opacity: 1;
}

/* Keep flip button visible on factoid backs */
.flashcard.simple-flip.flipped .flip-icon-button {
    display: flex !important;
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 1000;
    position: absolute;
    bottom: 20px; /* Same position as front */
    right: 20px;
}

/* Factoid Results Screen */
.factoid-results .results-stats {
    margin-bottom: 40px;
}

/* Rewards Bar */
.rewards-bar-container {
    margin: 40px auto;
    padding: 30px;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 20px;
    max-width: 500px;
}

.rewards-bar {
    display: flex;
    justify-content: center;
    gap: 40px;
    min-height: 100px;
}

/* Reward Slot */
.reward-slot {
    position: relative;
    width: 80px;
    height: 80px;
    overflow: hidden;
    border-radius: 12px;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid rgba(255, 255, 255, 0.2);
}

/* Slot Reel */
.slot-reel {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    flex-direction: column;
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

.slot-reel.spinning {
    animation: slotSpin 0.3s linear infinite;
}

.slot-reel.stopped {
    transform: translateY(-160px); /* Show middle item */
}

/* Slot Items */
.slot-item {
    width: 80px;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.slot-item img {
    width: 40px;
    height: 40px;
    filter: brightness(0) invert(1); /* Make icons white */
}

/* Reward Value */
.reward-value {
    position: absolute;
    bottom: -30px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 20px;
    font-weight: 700;
    color: #58cc02;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.reward-value.show {
    opacity: 1;
}

/* Slot Spin Animation */
@keyframes slotSpin {
    0% { transform: translateY(0); }
    100% { transform: translateY(-400px); }
}

/* Results Actions - Right Aligned */
.factoid-results .results-actions {
    display: flex;
    justify-content: flex-end;
    margin-top: 40px;
    padding: 0 20px 20px; /* Added bottom padding */
}

.factoid-results .btn-primary {
    background: #58cc02;
    color: #1a1a1a;
    border: none;
    padding: 14px 32px;
    border-radius: 24px;
    font-size: 16px;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.2s ease;
}

.factoid-results .btn-primary:hover {
    background: #6dd30f;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(88, 204, 2, 0.3);
}

/* Remove old flip hint */
.flip-hint {
    display: none \!important;
}

/* Remove green background from simple-flip container */
.simple-flip-container {
    background: transparent \!important;
}

/* REMOVED - conflicting with main .flashcard styles */

.flashcard-front,
.flashcard-back {
    /* Removed min-height to allow natural sizing */
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Changed from space-between */
    position: relative;
}

/* Make the card content area larger */
.card-content {
    flex-grow: 1;
    display: flex;
    align-items: flex-start; /* Start from top */
    justify-content: center;
    padding: 0; /* Remove padding */
    text-align: center;
    font-size: 26px !important;
    line-height: 1.4;
    max-width: 90%;
    margin: 0 auto;
    position: relative;
    z-index: 2;
}

/* Ensure factoid twist has room */
.factoid-twist {
    min-height: 200px;
}

/* Factoid back wrapper - fills the card */
.factoid-back-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: flex-start; /* Start from top */
    width: 100%;
    min-height: 550px; /* Ensure space for wonder meter and button */
    position: relative; /* For absolute positioning of children */
    flex: 1;
    /* Removed height: 100% to allow growth */
}

/* Factoid back display */
.factoid-back-display {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5px; /* Minimal gap */
    width: 100%;
    padding: 5px; /* Minimal padding */
    flex: 1 1 auto; /* Grow and shrink as needed */
    min-height: 0; /* Allow proper flex shrinking */
}


.category-hero-icon-back {
    width: 128px;
    height: 128px;
    object-fit: contain;
    margin-bottom: 2px;
    margin-top: -20px;
    opacity: 0.8;
    position: relative;
    z-index: 1;
    display: block;
}

.factoid-detail-label {
    font-size: 14px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--primary);
    padding: 3px 12px;
    background: rgba(88, 204, 2, 0.1);
    border-radius: 20px;
    margin: 0 0 5px 0; /* Only small bottom margin */
    position: relative;
    z-index: 2;
}

.factoid-back-display .factoid-twist {
    position: relative;
    z-index: 2;
    color: white !important;
    opacity: 1 !important;
    font-size: 20px; /* Default font size for better readability */
    line-height: 1.4;
    text-align: left; /* Left align */
    padding: 10px 20px;
    max-width: 100%;
    overflow-y: auto;
    max-height: 300px; /* More space for text */
    flex: 1; /* Take available space */
}

/* Hide check answer button ONLY for factoids/simple-flip cards */
.flashcard.simple-flip .flashcard-back .check-answer-btn,
.flashcard.simple-flip .flashcard-back .flashcard-check-answer-btn {
    display: none !important;
}

/* Specifically hide it for simple-flip cards */
.flashcard.simple-flip .check-answer-btn,
.flashcard.simple-flip .flashcard-check-answer-btn,
.flashcard.simple-flip .answer-check {
    display: none \!important;
}

/* Hide entire answer check section when showing factoids */
#flashcard[data-challenge-type="simple-flip"] .answer-check,
#flashcard[data-challenge-type="simple-flip"] .flashcard-check-answer-btn {
    display: none !important;
}

/* Hide only BACK side challenge elements for simple-flip cards to prevent flash */
.flashcard.simple-flip .flashcard-back .flashcard-challenge-container,
.flashcard.simple-flip .flashcard-back .flashcard-challenge-question,
.flashcard.simple-flip .flashcard-back .flashcard-challenge-input,
.flashcard.simple-flip .flashcard-back .answer-check,
.flashcard.simple-flip .flashcard-back .flashcard-check-answer-btn,
.flashcard.simple-flip .flashcard-back .flashcard-answer-feedback,
.flashcard.simple-flip .flashcard-back .flashcard-continue-btn {
    display: none !important;
    visibility: hidden !important;
    opacity: 0 !important;
}

/* Flip icon on back of cards */
.flip-icon-back {
    position: absolute !important;
    bottom: 20px !important; /* Match front positioning */
    right: 20px !important;
    z-index: 100;
}

/* Factoid flip footer - similar to quote flip footer */
.factoid-flip-footer {
    width: 100%;
    padding: 10px 15px;
    margin-top: auto; /* Push to bottom */
    border-top: 1px solid rgba(255, 255, 255, 0.1); /* Cute thin line separator */
    display: flex;
    justify-content: flex-end; /* Right align the button */
    align-items: center;
    background: transparent;
}

.factoid-flip-footer .flip-icon-button {
    position: relative !important;
    bottom: auto !important;
    right: auto !important;
    background: transparent !important; /* Remove dark spot */
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    opacity: 0.7;
    margin-left: auto; /* Push button to the right */
}

.factoid-flip-footer .flip-icon-button:hover {
    border-color: rgba(255, 255, 255, 0.5);
    transform: scale(1.1);
    opacity: 1;
}

.factoid-flip-footer .flip-icon {
    width: 24px;
    height: 24px;
    filter: brightness(0) invert(1); /* Make icon white */
}

/* For factoids, puns, and knock-knocks - restructure front to have footer */
.flashcard[data-challenge-type="simple-flip"] .flashcard-front,
.flashcard.pun-card .flashcard-front,
.flashcard.knock-knock-card .flashcard-front {
    display: flex;
    flex-direction: column;
    height: 100%;
}

.flashcard[data-challenge-type="simple-flip"] .flashcard-front .card-content,
.flashcard.pun-card .flashcard-front .card-content,
.flashcard.knock-knock-card .flashcard-front .card-content {
    flex: 1; /* Take up available space */
}

/* Move flip button on all three card types to footer-style positioning */
.flashcard[data-challenge-type="simple-flip"] .flashcard-front .flip-icon-button,
.flashcard.pun-card .flashcard-front .flip-icon-button,
.flashcard.knock-knock-card .flashcard-front .flip-icon-button {
    position: relative !important;
    bottom: auto !important;
    right: auto !important;
    margin-top: auto; /* Push to bottom */
    margin-left: auto; /* Right align */
    margin-right: 15px;
    margin-bottom: 15px;
    background: transparent !important;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    opacity: 0.7;
}

/* Add separator line above flip button for all three card types */
.flashcard[data-challenge-type="simple-flip"] .flashcard-front::after,
.flashcard.pun-card .flashcard-front::after,
.flashcard.knock-knock-card .flashcard-front::after {
    content: "";
    width: calc(100% - 30px);
    height: 1px;
    background: rgba(255, 255, 255, 0.1);
    margin: 15px auto 0;
    order: 2; /* Place before the button */
}

.flashcard[data-challenge-type="simple-flip"] .flashcard-front .flip-icon-button,
.flashcard.pun-card .flashcard-front .flip-icon-button,
.flashcard.knock-knock-card .flashcard-front .flip-icon-button {
    order: 3; /* Place after the separator */
}

/* Also hide it based on card container content */
.flashcard:has(.simple-flip-container) .answer-check {
    display: none \!important;
}

/* Factoid Results Screen */
.factoid-results {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    padding: 20px;
    position: relative;
}

.results-bot-container {
    width: 180px;
    height: 180px;
    margin-bottom: 20px;
}

.results-category-bot {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

/* Jazzy text styles */
.jazzy-title {
    font-size: 32px;
    font-weight: 800;
    color: var(--primary);
    text-transform: uppercase;
    letter-spacing: 2px;
    margin-bottom: 20px;
}

.jazzy-number {
    font-size: 48px;
    font-weight: 900;
    color: var(--primary);
}

/* Rewards bar at bottom */
.rewards-bar-container-bottom {
    margin-top: auto;
    margin-bottom: 20px;
    width: 90%;
    max-width: 400px;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 20px;
    padding: 15px;
    z-index: 10;
}

/* Factoid text improvements - REMOVED duplicate, using above definition */

.factoid-twist {
    background: transparent; /* No box */
    border-radius: 0;
    padding: 10px 20px;
    min-height: 120px;
    font-size: 24px; /* Bigger text - this is the main feature */
    line-height: 1.4;
    color: white;
    text-align: left; /* Left align for consistency */
}

/* Hide any rainbow elements in factoid results */
.factoid-results .rainbow-bar,
.factoid-results .rainbow-gradient,
.factoid-results [class*="rainbow"] {
    display: none !important;
}

/* Hide any rainbow elements in knock-knock results - MODAL SPECIFIC */
.knock-knock-results-modal .rainbow-bar,
.knock-knock-results-modal .rainbow-gradient,
.knock-knock-results-modal [class*="rainbow"],
.knock-knock-results-modal .rewards-popup,
.knock-knock-results .rainbow-bar,
.knock-knock-results .rainbow-gradient,
.knock-knock-results [class*="rainbow"] {
    display: none !important;
    background: none !important;
}

/* Specific styles for joke and factoid results modals */
.knock-knock-results-modal .rewards-container-large,
.pun-results-modal .rewards-container-large,
.factoid-results-modal .rewards-container-large {
    background: #000000 !important;
}

.knock-knock-results-modal .reward-slot {
    padding: 5px 0 !important;
}

/* Hide any rainbow elements in quote results */
.quote-results .rainbow-bar,
.quote-results .rainbow-gradient,
.quote-results [class*="rainbow"],
.quote-results .rewards-bar,
.quote-results .rewards-bar-container-bottom {
    display: none !important;
    background: none !important;
}

/* Hide any rainbow elements in pun results */
.pun-results .rainbow-bar,
.pun-results .rainbow-gradient,
.pun-results [class*="rainbow"] {
    display: none !important;
    background: none !important;
}

/* Keep rewards bar visible in pun results */
.pun-results .rewards-bar,
.pun-results .rewards-bar-container-bottom {
    display: flex !important;
    background: transparent !important;
}

/* Hide any rainbow elements in general results */
.general-results .rainbow-bar,
.general-results .rainbow-gradient,
.general-results [class*="rainbow"],
.general-results .rewards-bar,
.general-results .rewards-bar-container-bottom {
    display: none !important;
    background: none !important;
}

/* Comedy bot on results screen */
.results-comedy-bot {
    width: 300px;
    height: 300px;
    object-fit: contain;
    margin-bottom: 20px;
    filter: drop-shadow(0 8px 24px rgba(0, 0, 0, 0.3));
}

/* Large comedy bot for joke results */
.results-bot-container-large {
    width: 100%;
    display: flex;
    justify-content: center;
    margin-bottom: 10px;
}

.results-comedy-bot-large {
    width: 400px;
    height: 400px;
    object-fit: contain;
    filter: drop-shadow(0 8px 24px rgba(0, 0, 0, 0.3));
}

/* Large rewards container - belt style */
.rewards-container-large {
    width: 100%;
    max-width: calc(100% - 20px);
    height: 80px; /* Reduced height */
    background: #000000;
    border-radius: 0;
    margin: 5px auto;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 3px; /* Reduced padding */
    position: relative;
    z-index: 5;
}

/* Fix rewards bar in ALL results screens - remove gradient background */
.results-screen .rewards-bar,
.joke-results .rewards-bar {
    position: static !important;
    background: transparent !important;
    transform: none !important;
    padding: 0 !important;
    box-shadow: none !important;
    border-radius: 0 !important;
}

/* Rewards bar inside large container */
.rewards-container-large .rewards-bar {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: 0;
    position: relative;
    z-index: 5;
}

/* Reward slots */
.reward-slot {
    display: flex;
    flex-direction: column;
    position: relative;
    z-index: 10;
    align-items: center;
    gap: 0;
    background: none !important;
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
    flex: 1 1 0;
    min-width: 0;
}

.reward-icon {
    width: 48px;
    height: 48px;
    object-fit: contain;
    position: relative;
    z-index: 20;
}

.reward-amount {
    font-size: 20px;
    font-weight: 700;
    color: #58cc02;
    text-shadow: 0 0 10px rgba(88, 204, 2, 0.5);
}

/* Force reward slots to be visible */
.rewards-container-large .reward-slot,
#flashcardContainer .reward-slot {
    opacity: 1 !important;
    visibility: visible !important;
    display: flex !important;
    position: relative !important;
    z-index: 100 !important;
}

.rewards-container-large .reward-icon,
#flashcardContainer .reward-icon {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    width: 48px !important;
    height: 48px !important;
    position: relative !important;
    z-index: 30 !important;
    filter: none !important; /* No filters on white SVGs */
}

.rewards-container-large .reward-amount,
#flashcardContainer .reward-amount {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    color: white !important;
    font-size: 20px !important;
}

/* Debug the rewards bar content */
.rewards-container-large .rewards-bar,
#flashcardContainer .rewards-bar {
    min-height: 80px;
}

/* Debug the container itself */
#flashcardContainer .rewards-container-large {
}

/* Prevent ANY rewards bar gradient in flashcard modal */
.flashcard-modal .rewards-bar {
    background: transparent !important;
}

/* DEBUG: Force rewards bar to stay visible without animation */
.flashcard-modal .rewards-bar,
.results-screen .rewards-bar,
.knock-knock-results .rewards-bar,
.joke-results .rewards-bar,
#flashcardContainer .rewards-bar {
    transform: translateY(0) !important;
    opacity: 1 !important;
    visibility: visible !important;
    transition: none !important;
    animation: none !important;
}

/* DEBUG: Add border to identify gradient elements */
.results-screen [style*="gradient"],
.results-screen [class*="gradient"],
.results-screen [class*="rainbow"],
.flashcard-modal [style*="gradient"],
.flashcard-modal [class*="gradient"],
.flashcard-modal [class*="rainbow"] {
    border: 3px solid magenta !important;
    box-shadow: 0 0 10px magenta !important;
}

/* Ensure rewards popup doesn't show on results screens */
.results-screen .rewards-bar::before,
.joke-results .rewards-bar::before {
    display: none !important;
}

/* Force rewards bar content to be visible in knock-knock results */
.knock-knock-results-modal .rewards-bar,
.knock-knock-results-modal #rewardsBar {
    position: relative !important;
    z-index: 10 !important;
    display: flex !important;
    visibility: visible !important;
    opacity: 1 !important;
}

/* Ensure slot reel stays visible and properly positioned */
.knock-knock-results-modal .slot-reel,
.rewards-container-large .slot-reel {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    animation-fill-mode: forwards !important;
}

/* Ensure reward icons in slot reel don't get inverted */
.slot-reel .reward-icon {
    filter: none !important; /* Override any global filter */
    opacity: 1 !important;
    visibility: visible !important;
}

/* Style reward slots - remove all spacing */
.knock-knock-results-modal .reward-slot,
.pun-results-modal .reward-slot,
.factoid-results-modal .reward-slot {
    min-width: 42px !important;
    min-height: auto !important;
    margin: 0 !important;
    padding: 0 !important;
}

/* Remove all margins and padding from reward slots everywhere */
.reward-slot {
    margin: 0 !important;
    padding: 0 !important;
}

/* Remove any spacing from reward icons */
.reward-icon {
    margin: 0 !important;
    padding: 0 !important;
}

/* Remove spacing from reward amount text */
.reward-amount {
    margin: 0 !important;
    padding: 0 !important;
    line-height: 1 !important;
}

/* Override global rewards bar gap for joke and factoid results */
.knock-knock-results-modal .rewards-bar,
.knock-knock-results-modal #rewardsBar,
.pun-results-modal .rewards-bar,
.pun-results-modal #rewardsBar,
.factoid-results-modal .rewards-bar,
.factoid-results-modal #rewardsBar {
    gap: 10px !important;  /* Reduced from 40px for 7 slots */
    padding: 10px 0 !important;
}

/* Make slots smaller to fit 7 columns */
.knock-knock-results-modal .reward-slot,
.pun-results-modal .reward-slot,
.factoid-results-modal .reward-slot {
    width: 60px !important;  /* Reduced from 80px */
    height: 60px !important;
    overflow: visible !important;  /* Allow values to show below */
    margin-bottom: 30px !important;  /* Space for value text */
}

/* All flashcard results should keep values INSIDE slots (not absolute positioned outside) */
.knock-knock-results-modal .reward-value,
.pun-results-modal .reward-value,
.factoid-results-modal .reward-value {
    position: relative !important;
    bottom: auto !important;
    left: auto !important;
    transform: none !important;
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    text-align: center !important;
    margin-top: 2px !important;
    font-size: 16px !important;
    font-weight: bold !important;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.8) !important;
}

/* Quote results should keep values INSIDE slots (not absolute positioned outside) */
.quote-results-modal .reward-value {
    position: relative !important;
    bottom: auto !important;
    left: auto !important;
    transform: none !important;
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    text-align: center !important;
    margin-top: 2px !important;
}

/* Ensure images are visible */
.knock-knock-results-modal .reward-slot img {
    opacity: 1 !important;
    visibility: visible !important;
    display: block !important;
    position: relative !important;
    z-index: 50 !important;
    filter: none !important; /* Remove any filter that might make white SVGs invisible */
}

/* Slot machine spin animation */
@keyframes slotSpin {
    0% {
        transform: translateY(-400px); /* Start with spacer visible */
    }
    50% {
        transform: translateY(-2400px); /* Spin very fast through many rotations */
    }
    80% {
        transform: translateY(-490px); /* Come back to show first icon */
    }
    90% {
        transform: translateY(-475px); /* Slight bounce */
    }
    100% {
        transform: translateY(-480px); /* Settle with first icon centered */
    }
}

/* Fade in amount after spin */
@keyframes fadeInAmount {
    0% {
        opacity: 0;
        transform: translateX(-50%) translateY(10px);
    }
    100% {
        opacity: 1;
        transform: translateX(-50%) translateY(0);
    }
}

/* Simple icon spin animation */
@keyframes spinIcon {
    0% {
        transform: scale(0) rotate(0deg);
        opacity: 0;
    }
    50% {
        transform: scale(1.1) rotate(360deg);
        opacity: 1;
    }
    100% {
        transform: scale(1) rotate(720deg);
        opacity: 1;
    }
}

/* Done button positioning */
.done-button {
    position: relative;
    margin: 0 auto;
    display: block;
    min-width: 120px;
}

/* Hide joke results elements we don't want */
.joke-results .joke-comparison {
    display: none;
}

/* Results actions positioning */
.joke-results .results-actions {
    position: relative;
    height: 60px;
    margin-top: 40px;
}
}
